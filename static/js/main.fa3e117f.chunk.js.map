{"version":3,"sources":["pages/UploadImage.js","components/PredictionItem.js","pages/ImageList.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["styles","parent","width","height","child","position","top","left","transform","UploadImage","useState","selectedImage","setSelectedImage","handleUpload","a","formData","FormData","append","name","fetch","method","body","response","status","toast","success","json","details","error","style","className","type","onChange","e","target","files","onClick","PredictionItem","data","refetchData","id","image","category","predicted","src","alt","fontWeight","disabled","then","res","ImageList","setData","getData","items","useEffect","length","map","imageData","Navbar","to","App","hideProgressBar","autoClose","draggable","transition","Zoom","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa3e117f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst styles = {\r\n  parent: {\r\n    width: '100%',\r\n    height: '100vh',\r\n  },\r\n  child: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\n\r\nexport function UploadImage() {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const onImageSelect = (e) => {\r\n    if (e.target.files[0]) {\r\n      setSelectedImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (selectedImage !== null) {\r\n      const formData = new FormData();\r\n      formData.append('image', selectedImage, selectedImage.name);\r\n\r\n      const response = await fetch('http://localhost:8000/api/upload/', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        toast.success('Image uploaded successfully')\r\n      } else {\r\n        const { details } = await response.json();\r\n        toast.error(details)\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.parent}>\r\n      <div style={styles.child}>\r\n        <h1>Upload an Image</h1>\r\n        <div className=\"d-flex\">\r\n          <div>\r\n            <input type=\"file\" onChange={onImageSelect} />\r\n          </div>\r\n          <button className=\"btn btn-outline-primary\" onClick={handleUpload}>\r\n            Upload\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport function PredictionItem({ data, refetchData }) {\r\n  const { id, image, category, predicted } = data;\r\n\r\n  const handlePredict = () => {\r\n    fetch(`http://localhost:8000/api/predict/${id}`).then((res) => {\r\n      if (res.status === 200) {\r\n        refetchData();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"card col-4 mx-2 my-3 p-0\" style={{ width: '18rem' }}>\r\n      <img src={image} className=\"card-img-top\" style={{ height: '15rem' }} alt={id} />\r\n      <div className=\"card-body\">\r\n        <h6>\r\n          category: <span style={{ fontWeight: 'normal' }}>{category}</span>\r\n        </h6>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        <button\r\n          disabled={predicted}\r\n          className=\"btn btn-info text-dark\"\r\n          onClick={handlePredict}\r\n        >\r\n          predict\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { PredictionItem } from '../components/PredictionItem';\r\n\r\nexport function ImageList() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const getData = () => {\r\n    fetch('http://localhost:8000/api/images/')\r\n      .then((response) => response.json())\r\n      .then((data) => setData(data.items));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"my-5 text-center\">List of images</h2>\r\n      <div className=\"row justify-content-center align-items-center\">\r\n        {data.length > 0 ? (\r\n          data.map((imageData) => (\r\n            <PredictionItem data={imageData} refetchData={getData} />\r\n          ))\r\n        ) : (\r\n          <h5 className=\"text-center text-muted\">No predicted images yet.</h5>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function Navbar() {\r\n    return (\r\n        <div className=\"py-2 bg-primary px-1\">\r\n            <Link to=\"/\" className=\"me-2 text-white text-decoration-none\">Upload</Link>\r\n            <Link to=\"/api/images\" className=\"me-2 text-white text-decoration-none\">Images</Link>\r\n        </div>\r\n    )\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ToastContainer, Zoom } from 'react-toastify';\nimport { UploadImage } from \"./pages/UploadImage\";\nimport { ImageList } from \"./pages/ImageList\";\nimport { Navbar } from \"./components/Navbar\";\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nfunction App() {\n  return (\n    <div>\n        <Router>\n        <Navbar />\n          <ToastContainer\n            hideProgressBar\n            autoClose={3000}\n            draggable={false}\n            transition={Zoom}\n\n          />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={UploadImage} />\n              <Route path=\"/api/images\" component={ImageList} />\n            </Switch>\n          </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}